<!-- https://leetcode.com/problems/3sum/description/?envType=problem-list-v2&envId=array&status=SOLVED&difficulty=MEDIUM -->

class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> ar = new ArrayList<>();
        if (nums.length < 3) {
            return ar;
        }
        Arrays.sort(nums);
        for (int i = 0; i < nums.length - 2; i++) {
            if (i > 0 && nums[i] == nums[i - 1]) {
                continue;
            }
            int j = i + 1;
            int k = nums.length - 1;
            while (j < k) {
                int sum = nums[i] + nums[j] + nums[k];
                if (sum == 0) {
                    List<Integer> a1 = new ArrayList<>();
                    a1.add(nums[i]);
                    a1.add(nums[j]);
                    a1.add(nums[k]);
                    ar.add(a1);

                    while (j < k && nums[j] == nums[j + 1]) {
                        j++;
                    }
                    while (j < k && nums[k] == nums[k - 1]) {
                        k--;
                    }
                    j++;
                    k--;
                } else if (sum < 0) {
                    j++;
                } else {
                    k--;
                }
            }
        }
        return ar;
    }
}