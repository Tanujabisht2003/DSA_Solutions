<!-- https://leetcode.com/problems/string-to-integer-atoi/description/?envType=problem-list-v2&envId=string&status=SOLVED&difficulty=MEDIUM -->

import java.math.BigInteger;
class Solution {
    public int myAtoi(String s) {
        s = s.trim();
        if(s.length() == 0){
            return 0;
        }
        if(s.length() == 1){
            if(s.charAt(0) == '+' || s.charAt(0) == '-' || s.charAt(0) == '.'){
                return 0;
            }
        }
        if(Character.isLetter(s.charAt(0)) || s.charAt(0) == '.'){
            return 0;
        }
        StringBuilder st = new StringBuilder();
        if(Character.isDigit(s.charAt(0))){
            st.append(s.charAt(0));
        }
        if(!Character.isDigit(s.charAt(0))){
            st.append(s.charAt(0));
        }

        for(int i=1;i<s.length();i++){
            if(Character.isDigit(s.charAt(i))){
                st.append(s.charAt(i));
            }
            if(!Character.isDigit(s.charAt(i))){
                break;
            }
        }
        String result = st.toString();
        if(result.length() == 1 ){
            if(result.charAt(0) == '+' || result.charAt(0) == '-' ){
                return 0;
            }
        }
        BigInteger c = new BigInteger(result);

        if (c.compareTo(BigInteger.valueOf(Integer.MIN_VALUE)) < 0) {
            return Integer.MIN_VALUE;
        }
        if (c.compareTo(BigInteger.valueOf(Integer.MAX_VALUE)) > 0) {
            return Integer.MAX_VALUE;
        }

        return c.intValue();
    }
}